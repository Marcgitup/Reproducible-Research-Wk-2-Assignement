activity2$day[j] <- "weekend"
}
else {
activity2$day[j] <- "weekday"
}
}
#Checking how weekdays and weekends we get :
table(activity2$day)
weekDays <- subset(activity2,activity2$day=="weekday")
weekEnds <- subset(activity2,activity2$day=="weekend")
weekDaysMean <- tapply(weekDays$steps,weekDays$interval,mean)
weekEndsMean <- tapply(weekEnds$steps,weekEnds$interval,mean)
par(mfrow=c(1,2))
plot(unique(activity2$interval),weekDaysMean,type = "l")
plot(unique(activity2$interval),weekEndsMean,type="l")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Rfolder/Data/Reproducible Research Wk 2 Assignement")
if (!file.exists("activity.csv")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",destfile = "repdata%2Fdata%2Factivity.zip")
unzip("repdata%2Fdata%2Factivity.zip")
}
activity <- read.csv("activity.csv",sep=",",header=TRUE,na.strings = "NA")
str(activity)
activity$date <- as.Date(activity$date)
str(activity)
sum(activity$steps,na.rm = TRUE)
hist(activity$steps)
mean(activity$steps,na.rm=TRUE);median(activity$steps,na.rm=TRUE)
median(activity$steps,na.rm=TRUE)
#First get the average number of steps per 5 minutes interval across all days with tapply and store it in meanStepsInterval
meanStepsInterval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
#Plotting average number of steps per day by 5-minute interval
plot(unique(activity$interval),meanStepsInterval,type='l',xlab = "Interval",ylab='Averaged Steps')
meanStepsInterval[meanStepsInterval==max(meanStepsInterval)]
# summary function gives us the number of missing value per columns
summary(activity)
activity2 <- activity
for (i in seq(length(activity2$steps))){
if (is.na(activity2$steps[i])) {
num <- as.character(activity2$interval[i])
activity2$steps[i] <- meanStepsInterval[num]
}
}
summary(activity2)
library(ggplot2)
# We need to merge both DF into one to make an histogram
activity$activity <- "activity1"
activity2$activity <- "activity2"
activities <- rbind(activity,activity2)
activities$activity <- as.factor(activities$activity)
ggplot(activities, aes(steps, fill = activity)) + geom_histogram(alpha = 0.5, position = 'identity')
for (j in seq(length(activity$steps))) {
if (weekdays(activity2$date[j])=="Samedi" | weekdays(activity2$date[j])=="Dimanche") {
activity2$day[j] <- "weekend"
}
else {
activity2$day[j] <- "weekday"
}
}
#Checking how weekdays and weekends we get :
table(activity2$day)
weekDays <- subset(activity2,activity2$day=="weekday")
weekEnds <- subset(activity2,activity2$day=="weekend")
weekDaysMean <- tapply(weekDays$steps,weekDays$interval,mean)
weekEndsMean <- tapply(weekEnds$steps,weekEnds$interval,mean)
par(mfrow=c(2,1))
plot(unique(activity2$interval),weekDaysMean,type = "l",ylab = "Average steps for weekdays",xlab="Interval")
plot(unique(activity2$interval),weekEndsMean,type="l",ylab = "Avergae steps for weekends",xlab="Interval")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Rfolder/Data/Reproducible Research Wk 2 Assignement")
if (!file.exists("activity.csv")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",destfile = "repdata%2Fdata%2Factivity.zip")
unzip("repdata%2Fdata%2Factivity.zip")
}
activity <- read.csv("activity.csv",sep=",",header=TRUE,na.strings = "NA")
str(activity)
activity$date <- as.Date(activity$date)
str(activity)
sum(activity$steps,na.rm = TRUE)
hist(activity$steps)
mean(activity$steps,na.rm=TRUE);median(activity$steps,na.rm=TRUE)
median(activity$steps,na.rm=TRUE)
#First get the average number of steps per 5 minutes interval across all days with tapply and store it in meanStepsInterval
meanStepsInterval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
#Plotting average number of steps per day by 5-minute interval
plot(unique(activity$interval),meanStepsInterval,type='l',xlab = "Interval",ylab='Averaged Steps')
meanStepsInterval[meanStepsInterval==max(meanStepsInterval)]
# summary function gives us the number of missing value per columns
summary(activity)
activity2 <- activity
for (i in seq(length(activity2$steps))){
if (is.na(activity2$steps[i])) {
num <- as.character(activity2$interval[i])
activity2$steps[i] <- meanStepsInterval[num]
}
}
summary(activity2)
library(ggplot2)
# We need to merge both DF into one to make an histogram
activity$activity <- "activity1"
activity2$activity <- "activity2"
activities <- rbind(activity,activity2)
activities$activity <- as.factor(activities$activity)
ggplot(activities, aes(steps, fill = activity)) + geom_histogram(alpha = 0.5, position = 'identity')
for (j in seq(length(activity$steps))) {
if (weekdays(activity2$date[j])=="Samedi" | weekdays(activity2$date[j])=="Dimanche") {
activity2$day[j] <- "weekend"
}
else {
activity2$day[j] <- "weekday"
}
}
#Checking how weekdays and weekends we get :
table(activity2$day)
weekDays <- subset(activity2,activity2$day=="weekday")
weekEnds <- subset(activity2,activity2$day=="weekend")
weekDaysMean <- tapply(weekDays$steps,weekDays$interval,mean)
weekEndsMean <- tapply(weekEnds$steps,weekEnds$interval,mean)
par(mfrow=c(2,1))
plot(unique(activity2$interval),weekDaysMean,type = "l",ylab = "Average steps for weekdays")
plot(unique(activity2$interval),weekEndsMean,type="l",ylab = "Avergae steps for weekends",xlab="Interval")
summary(activities$activity)
head(rbind(weekDaysMean,weekEndsMean))
head(cbind(weekDaysMean,weekEndsMean))
head(cbind(weekDaysMean,rep("weekday",17568)))
class(head(cbind(weekDaysMean,rep("weekday",17568))))
weekDaysMean <- cbind(weekDaysMean,rep("weekday",17568))
weekEndsMean <- cbind(weekEndsMean,rep("weekend",17568))
colnames(weekDaysMean)
colnames(weekDaysMean) <- c("weekDaysMean","day")
colnames(weekEndsMean) <- c("weekEndsMean","day")
allMeans <- rbind(weekDaysMean,weekEndsMean)
head(allMeans)
ggplot(allMeans,aes(unique(activity2$interval,y=weekDaysMean~day)))
View(weekDaysMean)
summary(allMeans)
class(allMeas)
class(allMeans)
head(as.data.frame(allMeans))
summary(head(as.data.frame(allMeans)))
allMeans <- as.data.frame(allMeans)
summary(allMeans)
str(allMeans)
allMeans$weekDaysMean <- as.numeric(allMeans$weekDaysMean)
str(allMeans)
head(allMeans)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Rfolder/Data/Reproducible Research Wk 2 Assignement")
if (!file.exists("activity.csv")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",destfile = "repdata%2Fdata%2Factivity.zip")
unzip("repdata%2Fdata%2Factivity.zip")
}
activity <- read.csv("activity.csv",sep=",",header=TRUE,na.strings = "NA")
str(activity)
activity$date <- as.Date(activity$date)
str(activity)
sum(activity$steps,na.rm = TRUE)
hist(activity$steps)
mean(activity$steps,na.rm=TRUE);median(activity$steps,na.rm=TRUE)
median(activity$steps,na.rm=TRUE)
#First get the average number of steps per 5 minutes interval across all days with tapply and store it in meanStepsInterval
meanStepsInterval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
#Plotting average number of steps per day by 5-minute interval
plot(unique(activity$interval),meanStepsInterval,type='l',xlab = "Interval",ylab='Averaged Steps')
meanStepsInterval[meanStepsInterval==max(meanStepsInterval)]
# summary function gives us the number of missing value per columns
summary(activity)
activity2 <- activity
for (i in seq(length(activity2$steps))){
if (is.na(activity2$steps[i])) {
num <- as.character(activity2$interval[i])
activity2$steps[i] <- meanStepsInterval[num]
}
}
summary(activity2)
library(ggplot2)
# We need to merge both DF into one to make an histogram
activity$activity <- "activity1"
activity2$activity <- "activity2"
activities <- rbind(activity,activity2)
activities$activity <- as.factor(activities$activity)
ggplot(activities, aes(steps, fill = activity)) + geom_histogram(alpha = 0.5, position = 'identity')
for (j in seq(length(activity$steps))) {
if (weekdays(activity2$date[j])=="Samedi" | weekdays(activity2$date[j])=="Dimanche") {
activity2$day[j] <- "weekend"
}
else {
activity2$day[j] <- "weekday"
}
}
#Checking how weekdays and weekends we get :
table(activity2$day)
weekDays <- subset(activity2,activity2$day=="weekday")
weekEnds <- subset(activity2,activity2$day=="weekend")
weekDaysMean <- tapply(weekDays$steps,weekDays$interval,mean)
weekEndsMean <- tapply(weekEnds$steps,weekEnds$interval,mean)
par(mfrow=c(2,1))
plot(unique(activity2$interval),weekDaysMean,type = "l",ylab = "Average steps for weekdays",xlab="",)
plot(unique(activity2$interval),weekEndsMean,type="l",ylab = "Average steps for weekends",xlab="Interval")
allMeans <- rbind(weekEndsMean,weekDaysMean)
head(allMeans)
allMeans <- cbind(weekEndsMean,weekDaysMean)
head(allMeans)
head(data.frame(allMeans))
allMeans <- data.frame(allMeans)
summary(allMeans)
head(data.frame(weekEndsMean))
weekDaysMean <- data.frame(weekDaysMean)
weekEndsMean <- data.frame(weeEndsMean)
weekDaysMean <- data.frame(weekDaysMean)
weekEndsMean <- data.frame(weekEndsMean)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Rfolder/Data/Reproducible Research Wk 2 Assignement")
if (!file.exists("activity.csv")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",destfile = "repdata%2Fdata%2Factivity.zip")
unzip("repdata%2Fdata%2Factivity.zip")
}
activity <- read.csv("activity.csv",sep=",",header=TRUE,na.strings = "NA")
str(activity)
activity$date <- as.Date(activity$date)
str(activity)
sum(activity$steps,na.rm = TRUE)
hist(activity$steps)
mean(activity$steps,na.rm=TRUE);median(activity$steps,na.rm=TRUE)
median(activity$steps,na.rm=TRUE)
#First get the average number of steps per 5 minutes interval across all days with tapply and store it in meanStepsInterval
meanStepsInterval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
#Plotting average number of steps per day by 5-minute interval
plot(unique(activity$interval),meanStepsInterval,type='l',xlab = "Interval",ylab='Averaged Steps')
meanStepsInterval[meanStepsInterval==max(meanStepsInterval)]
# summary function gives us the number of missing value per columns
summary(activity)
activity2 <- activity
for (i in seq(length(activity2$steps))){
if (is.na(activity2$steps[i])) {
num <- as.character(activity2$interval[i])
activity2$steps[i] <- meanStepsInterval[num]
}
}
summary(activity2)
library(ggplot2)
# We need to merge both DF into one to make an histogram
activity$activity <- "activity1"
activity2$activity <- "activity2"
activities <- rbind(activity,activity2)
activities$activity <- as.factor(activities$activity)
ggplot(activities, aes(steps, fill = activity)) + geom_histogram(alpha = 0.5, position = 'identity')
for (j in seq(length(activity$steps))) {
if (weekdays(activity2$date[j])=="Samedi" | weekdays(activity2$date[j])=="Dimanche") {
activity2$day[j] <- "weekend"
}
else {
activity2$day[j] <- "weekday"
}
}
#Checking how weekdays and weekends we get :
table(activity2$day)
weekDays <- subset(activity2,activity2$day=="weekday")
weekEnds <- subset(activity2,activity2$day=="weekend")
weekDaysMean <- tapply(weekDays$steps,weekDays$interval,mean)
weekEndsMean <- tapply(weekEnds$steps,weekEnds$interval,mean)
weekDaysMean <- data.frame(weekDaysMean)
weekEndsMean <- data.frame(weekEndsMean)
#par(mfrow=c(2,1))
#plot(unique(activity2$interval),weekDaysMean,type = "l",ylab = #"Average steps for weekdays",xlab="",)
#plot(unique(activity2$interval),weekEndsMean,type="l",ylab = #"Average steps for weekends",xlab="Interval")
str(weekEndsMean)
summary(weekEndsMean)
weekEndsMean$day <- "weekend"
weekDaysMean$day <- "weekday"
allMeans <- rbind(weekEndsMean,weekDaysMean)
colnames(weekEndsMean) <- c("stepsMean","day")
colnames(weekDaysMean) <- c("stepsMean","day")
allMeans <- rbind(weekEndsMean,weekDaysMean)
head(allMeans)
rownames(allMeans)
plot(unique(activity2$interval),allMeans$stepsMean)
plot(allMeans$stepsMean)
g <- ggplot(allMeans,aes(x = unique(activity2$interval),y=.~day)+ggtitle("PM2.5 Emissions (log) by type and year")
)
library(lattice)
xyplot(stepsMean ~ day,allMeans)
xyplot(stepsMean ~ unique(activity2$interval) | day, allMeans)
class(allMeans$day)
allMeans$day <- as.factor(allMeans$day)
xyplot(stepsMean ~ unique(activity2$interval) | day, allMeans)
class(allMeans$day)
summary(allMeans$day)
View(allMeans)
summary(allMeans)
str(allMeans)
mean(allMeans$stepsMean[allMeans$day=="weekday"])
mean(allMeans$stepsMean[allMeans$day=="weekend"])
xyplot(stepsMean ~ unique(activity2$interval) | day, allMeans)
ggplot(data = allMeans,aes(x = unique(activity2$interval),y= steps ~ day))
library(ggplot2)
library(grid)
library(gridExtra)
p1 = qplot(unique(activity2$interval), allMeans$stepsMean[allMeans$day=="weekday"]
p2 = qplot(unique(activity2$interval), allMeans$stepsMean[allMeans$day=="weekend"]
grid.arrange(p1, p2, ncol = 2, main = "Main title")
library(ggplot2)
library(grid)
library(gridExtra)
p1 = qplot(unique(activity2$interval), allMeans$stepsMean[allMeans$day=="weekday"])
p2 = qplot(unique(activity2$interval), allMeans$stepsMean[allMeans$day=="weekend"])
grid.arrange(p1, p2, ncol = 2, main = "Main title")
library(ggplot2)
library(grid)
library(gridExtra)
p1 = qplot(unique(activity2$interval), allMeans$stepsMean[allMeans$day=="weekday"])
p2 = qplot(unique(activity2$interval), allMeans$stepsMean[allMeans$day=="weekend"])
library(ggplot2)
library(grid)
library(gridExtra)
p1 = qplot(unique(activity2$interval), allMeans$stepsMean[allMeans$day=="weekday"])
p2 = qplot(unique(activity2$interval), allMeans$stepsMean[allMeans$day=="weekend"])
grid.arrange(p1, p2, nrow = 2, main = "Main title")
> p1 = qplot(unique(activity2$interval), allMeans$stepsMean[allMeans$day=="weekday"])
p1 = qplot(unique(activity2$interval), allMeans$stepsMean[allMeans$day=="weekday"])
p1
multiplot(p1,p2)
p <- ggplot(allMeans,aes(unique(activity2$interval),steps))
p <- ggplot(allMeans,aes(unique(activity2$interval),steps))+geom_points()
p <- ggplot(allMeans,aes(unique(activity2$interval),steps))+geom_point()
p
p <- ggplot(allMeans,aes(unique(activity2$interval),stepsMean))+geom_point()
p
plot(unique(activity2$interval),allMeans$stepsMean)
plot(unique(activity2$interval),allMeans$stepsMean[allMeans$day=="weekend"])
plot(unique(activity2$interval),allMeans$stepsMean[allMeans$day=="weekend"],type="l")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Rfolder/Data/Reproducible Research Wk 2 Assignement")
if (!file.exists("activity.csv")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",destfile = "repdata%2Fdata%2Factivity.zip")
unzip("repdata%2Fdata%2Factivity.zip")
}
activity <- read.csv("activity.csv",sep=",",header=TRUE,na.strings = "NA")
str(activity)
activity$date <- as.Date(activity$date)
str(activity)
sum(activity$steps,na.rm = TRUE)
hist(activity$steps)
mean(activity$steps,na.rm=TRUE);median(activity$steps,na.rm=TRUE)
median(activity$steps,na.rm=TRUE)
#First get the average number of steps per 5 minutes interval across all days with tapply and store it in meanStepsInterval
meanStepsInterval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
#Plotting average number of steps per day by 5-minute interval
plot(unique(activity$interval),meanStepsInterval,type='l',xlab = "Interval",ylab='Averaged Steps')
meanStepsInterval[meanStepsInterval==max(meanStepsInterval)]
# summary function gives us the number of missing value per columns
summary(activity)
activity2 <- activity
for (i in seq(length(activity2$steps))){
if (is.na(activity2$steps[i])) {
num <- as.character(activity2$interval[i])
activity2$steps[i] <- meanStepsInterval[num]
}
}
summary(activity2)
library(ggplot2)
# We need to merge both DF into one to make an histogram
activity$activity <- "activity1"
activity2$activity <- "activity2"
activities <- rbind(activity,activity2)
activities$activity <- as.factor(activities$activity)
ggplot(activities, aes(steps, fill = activity)) + geom_histogram(alpha = 0.5, position = 'identity')
for (j in seq(length(activity$steps))) {
if (weekdays(activity2$date[j])=="Samedi" | weekdays(activity2$date[j])=="Dimanche") {
activity2$day[j] <- "weekend"
}
else {
activity2$day[j] <- "weekday"
}
}
#Checking how weekdays and weekends we get :
table(activity2$day)
weekDaysMean <- data.frame(weekDaysMean)
weekEndsMean <- data.frame(weekEndsMean)
weekEndsMean$day <- "weekend"
weekDaysMean$day <- "weekday"
colnames(weekEndsMean) <- c("stepsMean","day")
colnames(weekDaysMean) <- c("stepsMean","day")
allMeans <- rbind(weekEndsMean,weekDaysMean)
weekDays <- subset(activity2,activity2$day=="weekday")
weekEnds <- subset(activity2,activity2$day=="weekend")
weekDaysMean <- tapply(weekDays$steps,weekDays$interval,mean)
weekEndsMean <- tapply(weekEnds$steps,weekEnds$interval,mean)
par(mfrow=c(2,1))
plot(unique(activity2$interval),weekDaysMean,type = "l",ylab = "Average steps for weekdays",xlab="")
plot(unique(activity2$interval),weekEndsMean,type="l",ylab = "Average steps for weekends",xlab="Interval")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Rfolder/Data/Reproducible Research Wk 2 Assignement")
if (!file.exists("activity.csv")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",destfile = "repdata%2Fdata%2Factivity.zip")
unzip("repdata%2Fdata%2Factivity.zip")
}
activity <- read.csv("activity.csv",sep=",",header=TRUE,na.strings = "NA")
str(activity)
activity$date <- as.Date(activity$date)
str(activity)
sum(activity$steps,na.rm = TRUE)
hist(activity$steps,xlab = "Steps")
png(filename = "plot1.png")
hist(activity$steps,xlab = "Steps")
dev.off()
mean(activity$steps,na.rm=TRUE)
median(activity$steps,na.rm=TRUE)
#First get the average number of steps per 5 minutes interval across all days with tapply and store it in meanStepsInterval
meanStepsInterval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
#Plotting average number of steps per day by 5-minute interval
plot(unique(activity$interval),meanStepsInterval,type='l',xlab = "Interval",ylab='Averaged Steps')
png(filename = "plot2.png")
plot(unique(activity$interval),meanStepsInterval,type='l',xlab = "Interval",ylab='Averaged Steps')
dev.off()
meanStepsInterval[meanStepsInterval==max(meanStepsInterval)]
# summary function gives us the number of missing value per columns
summary(activity)
activity2 <- activity
for (i in seq(length(activity2$steps))){
if (is.na(activity2$steps[i])) {
num <- as.character(activity2$interval[i])
activity2$steps[i] <- meanStepsInterval[num]
}
}
summary(activity2)
library(ggplot2)
# We need to merge both DF into one to make an histogram
activity$activity <- "activity1"
activity2$activity <- "activity2"
activities <- rbind(activity,activity2)
activities$activity <- as.factor(activities$activity)
ggplot(activities, aes(steps, fill = activity)) + geom_histogram(alpha = 0.5, position = 'identity')
png(filename = "plot3.png")
ggplot(activities, aes(steps, fill = activity)) + geom_histogram(alpha = 0.5, position = 'identity')
dev.off()
for (j in seq(length(activity$steps))) {
if (weekdays(activity2$date[j])=="Samedi" | weekdays(activity2$date[j])=="Dimanche") {
activity2$day[j] <- "weekend"
}
else {
activity2$day[j] <- "weekday"
}
}
#Checking how weekdays and weekends we get :
table(activity2$day)
weekDays <- subset(activity2,activity2$day=="weekday")
weekEnds <- subset(activity2,activity2$day=="weekend")
weekDaysMean <- tapply(weekDays$steps,weekDays$interval,mean)
weekEndsMean <- tapply(weekEnds$steps,weekEnds$interval,mean)
par(mfrow=c(2,1))
plot(unique(activity2$interval),weekDaysMean,type = "l",ylab = "Average steps weekdays",xlab="",main = "Weekday")
plot(unique(activity2$interval),weekEndsMean,type="l",ylab = "Average steps weekends",xlab="Interval",main="Weekend")
png(filename = "plot4.png")
par(mfrow=c(2,1))
plot(unique(activity2$interval),weekDaysMean,type = "l",ylab = "Average steps weekdays",xlab="",main = "Weekday")
plot(unique(activity2$interval),weekEndsMean,type="l",ylab = "Average steps weekends",xlab="Interval",main="Weekend")
dev.off()
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Rfolder/Data/Reproducible Research Wk 2 Assignement")
if (!file.exists("activity.csv")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",destfile = "repdata%2Fdata%2Factivity.zip")
unzip("repdata%2Fdata%2Factivity.zip")
}
activity <- read.csv("activity.csv",sep=",",header=TRUE,na.strings = "NA")
str(activity)
activity$date <- as.Date(activity$date)
str(activity)
sum(activity$steps,na.rm = TRUE)
hist(activity$steps,xlab = "Steps")
mean(activity$steps,na.rm=TRUE)
median(activity$steps,na.rm=TRUE)
#First get the average number of steps per 5 minutes interval across all days with tapply and store it in meanStepsInterval
meanStepsInterval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
#Plotting average number of steps per day by 5-minute interval
plot(unique(activity$interval),meanStepsInterval,type='l',xlab = "Interval",ylab='Averaged Steps')
meanStepsInterval[meanStepsInterval==max(meanStepsInterval)]
# summary function gives us the number of missing value per columns
summary(activity)
activity2 <- activity
for (i in seq(length(activity2$steps))){
if (is.na(activity2$steps[i])) {
num <- as.character(activity2$interval[i])
activity2$steps[i] <- meanStepsInterval[num]
}
}
summary(activity2)
library(ggplot2)
# We need to merge both DF into one to make an histogram
activity$activity <- "activity1"
activity2$activity <- "activity2"
activities <- rbind(activity,activity2)
activities$activity <- as.factor(activities$activity)
ggplot(activities, aes(steps, fill = activity)) + geom_histogram(alpha = 0.5, position = 'identity')
for (j in seq(length(activity$steps))) {
if (weekdays(activity2$date[j])=="Samedi" | weekdays(activity2$date[j])=="Dimanche") {
activity2$day[j] <- "weekend"
}
else {
activity2$day[j] <- "weekday"
}
}
#Checking how weekdays and weekends we get :
table(activity2$day)
weekDays <- subset(activity2,activity2$day=="weekday")
weekEnds <- subset(activity2,activity2$day=="weekend")
weekDaysMean <- tapply(weekDays$steps,weekDays$interval,mean)
weekEndsMean <- tapply(weekEnds$steps,weekEnds$interval,mean)
par(mfrow=c(2,1))
plot(unique(activity2$interval),weekDaysMean,type = "l",ylab = "Average steps weekdays",xlab="",main = "Weekday")
plot(unique(activity2$interval),weekEndsMean,type="l",ylab = "Average steps weekends",xlab="Interval",main="Weekend")
